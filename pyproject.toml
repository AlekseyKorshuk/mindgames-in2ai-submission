[project]
name = "mindgames-in2ai-submission"
version = "0.1.0"
description = "Submission for MindGames: In2AI Team"
authors = [
    {name = "Aleksey Korshuk",email = "ale-kor02@mail.ru"}
]
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    "textarena==0.7.3",
    "openai==1.99.1",
    "numpy==2.2.6",
    "pandas==2.3.2",
    "click==8.2.1",
    "tabulate==0.9.0",
    "tqdm==4.67.1",
    "pydantic==2.11.7",
    "regex==2025.7.34",
    "Jinja2==3.1.6",
    "sglang[all]==0.5.4",
]

[project.optional-dependencies]
dev = [
    "mypy==1.15.0",
    "ruff==0.12.12",
]

[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = [
    "agent",
    "online_play_stage_2",
    "prompt_utils",
    "utils",
]

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.12"
exclude = 'vendor/*|envs/*'
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[[tool.mypy.overrides]]
module = [
  "vendor.*",
]
follow_imports = "skip"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
# if rule doesn't make sense, add it to ignore:
exclude = ["envs/"]
lint.per-file-ignores."*_test.py" = [
    # at least this three should be fine in tests:
    "S101",    # asserts allowed in tests...
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "PLR2004", # Magic value used in comparison, ...
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S105",    # Possible hardcoded password
    "S106",    # Possible hardcoded password
]
lint.per-file-ignores."*templates/*.py" = [
    "E501", # line too long
]
lint.flake8-bugbear.extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.params.Depends",
    "fastapi.Query",
    "fastapi.params.Query",
]
lint.ignore = [
    "D211",   # ignore in favor of D203
    "D21",    # ignore in favor of D213
    "ANN101", # don't use type annotations for self
    "ANN102", # don't use type annotations for cls
    "ANN003", # don't use type annotations for **kwargs
    "ANN401", # allow Any
    "RET504", # allow unnecessary assigments before return
    "S603",   # allow subprocess.run without check=True
]
line-length = 100
lint.select = [
    "F",     # avoid common mistakes
    "B",     # common bug patterns
    "E",     # format code consistently
    "N",     # use naming conventions
    "ANN",   # use type annotations
    "W",     # pycodestyle warnings
    "I",     # sort packages
    "ICN",   # use import convention aliases
    "ASYNC", # use async correctly
    "S",     # avoid common security issues
    "UP",    # use latest python syntax
    "C90",   # reduce complexity of the file
    "A",     # don't redefine build-in functions
    "INP",   # add __init__.py to directories
    "T20",   # don't use print (in production)
    "T100",  # don't use debbugers (in production)
    "PT",    # write test correctly
    "RET",   # return correctly
    "SIM",   # simplify your code
    "ARG",   # avoid unused arguments
    "PTH",   # use pathlib correctly
    "TD",    # todo should have ticket and owner
    "ERA",   # no commented out code
    "PERF",  # common performance issues
    "RUF",   # ruff best practices

    # Nice to have:
    "C4",  # use correct comprehensions
    "COM", # format commas
    "DTZ", # best practices for datetime
    "EXE", # shebang rules
    "ISC", # string concatnation
    "G",   # logging best practices
    "PIE", # misc lints
    "PD",  # pandas best practices
    "NPY", # numpy best practices
]

[tool.black]
line-length = 100  # Matches the line-length setting in ruff
target-version = ['py312']  # Target the same Python version as specified in the dependencies

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
asyncio_mode = "auto"
